{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/modules/shared-module/components/worksheet-grid-row.component.html","webpack:///./src/app/modules/shared-module/components/worksheet-grid-row.component.ts","webpack:///./src/app/modules/shared-module/components/worksheet-grid.component.html","webpack:///./src/app/modules/shared-module/components/worksheet-grid.component.ts","webpack:///./src/app/modules/shared-module/shared.module.ts","webpack:///./src/app/modules/worksheet-module/components/worksheet.component.html","webpack:///./src/app/modules/worksheet-module/components/worksheet.component.ts","webpack:///./src/app/modules/worksheet-module/services/worksheetdata.service.ts","webpack:///./src/app/modules/worksheet-module/worksheet.module.ts","webpack:///./src/app/routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n<router-outlet (activate)=\\\"onActivate($event)\\\" ></router-outlet>\\r\\n \\r\\n \\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n  title = 'ClientApp';\r\n\r\n  onActivate(event) {\r\n    window.scroll(0, 0);\r\n\r\n  }\r\n} \r\n","//system imports\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { routing } from './routing.module';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n//App Imports\r\nimport { SharedModule } from './modules/shared-module/shared.module';\r\nimport { WorkSheetModule } from './modules/worksheet-module/worksheet.module';\r\n \r\n \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    WorkSheetModule,\r\n    SharedModule.forRoot(),\r\n    routing,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\r\\n<form [formGroup]=\\\"WorkSheetEntryForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n  <td>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"title\\\" />\\r\\n    <div *ngIf=\\\"submitted && workSheetForm.title.errors\\\">\\r\\n      <div *ngIf=\\\"workSheetForm.title.errors.required\\\">Title is required</div>\\r\\n    </div>\\r\\n  </td>\\r\\n  <td>\\r\\n    <p-dropdown [options]=\\\"workType\\\"\\r\\n                optionLabel=\\\"name\\\"\\r\\n                placeholder=\\\"Please select a Type\\\"\\r\\n                formControlName=\\\"type\\\"\\r\\n                defaultLabel=\\\"Select Type\\\"\\r\\n                [showClear]=\\\"true\\\" [filter]=\\\"true\\\" [autoWidth]=\\\"false\\\"></p-dropdown>\\r\\n\\r\\n    <div *ngIf=\\\"submitted && workSheetForm.type.errors\\\">\\r\\n      <div *ngIf=\\\"workSheetForm.type.errors.required\\\">Type is required</div>\\r\\n    </div>\\r\\n  </td>\\r\\n  <td>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"duration\\\" />\\r\\n    <div *ngIf=\\\"submitted && workSheetForm.duration.errors\\\">\\r\\n      <div *ngIf=\\\"workSheetForm.duration.errors.required\\\">Duration is required</div>\\r\\n      Please enter a duration in hh:mm format\\r\\n    </div>\\r\\n  </td>\\r\\n  <td>\\r\\n    <input type=\\\"text\\\" formControlName=\\\"hourlyrate\\\" />\\r\\n    <div *ngIf=\\\"submitted && workSheetForm.hourlyrate.errors\\\">\\r\\n      Please enter a valid number for hourly rate\\r\\n    </div>\\r\\n  </td>\\r\\n  <td>\\r\\n    {{calculateTotal}}\\r\\n  </td>\\r\\n  \\r\\n  <td>\\r\\n\\r\\n    <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Save\\\" />\\r\\n    &nbsp;\\r\\n    <input type=\\\"button\\\" class=\\\"btn btn-secondary\\\" value=\\\"Cancel\\\" />\\r\\n  </td>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","\r\nimport {Component, Input, OnInit} from \"@angular/core\";\r\nimport { WorkSheetModel } from \"../../worksheet-module/models/worksheet.model\";\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\n\r\ninterface WorkType {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  //We have to display the component tag as <TR> so enclosed the selector in []\r\n  selector: '[worksheet-row]',\r\n  templateUrl: 'worksheet-grid-row.component.html',\r\n})\r\n\r\n\r\nexport class WorkSheetGridRow implements OnInit {\r\n\r\n  WorkSheetEntryForm: FormGroup;\r\n  workType: WorkType[];\r\n  selectedWorkType: WorkType\r\n  \r\n\r\n  constructor(private formBuilder: FormBuilder ) {\r\n\r\n    //init work types..\r\n    this.workType = [\r\n      { value: \"1\", name: \"Telephone Call\" },\r\n      { value: \"2\", name: \"Research \" },\r\n      { value: \"3\", name: \"Drafting Document \" }\r\n    ]\r\n  }\r\n\r\n  get workSheetForm() {\r\n    return this.WorkSheetEntryForm.controls;\r\n  }\r\n\r\n  //Input property to get the model data...\r\n  @Input(\"rowData\") rowData: WorkSheetModel;\r\n  submitted = false;\r\n  regexValidDecimal: RegExp = /^\\d+(\\.\\d{1,2})?$/;\r\n  regexValidDuration: RegExp = /^\\d+([:][0-5][0-9])?$/;\r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    //Init Reactive form for new work sheet entry. the same will be used for Edit..\r\n    this.WorkSheetEntryForm = this.formBuilder.group({\r\n\r\n      'title': new FormControl(this.rowData.title, Validators.required),\r\n      'type': new FormControl((this.rowData.typeId == null ? null : this.getWorkTypeValue(this.rowData.typeId)), Validators.required ),\r\n      'duration': new FormControl(this.rowData.duration, [Validators.required, Validators.pattern(this.regexValidDuration)]),\r\n      'hourlyrate': new FormControl(this.rowData.hourlyrate, Validators.pattern(this.regexValidDecimal)),\r\n\r\n    });\r\n  }\r\n\r\n  getWorkTypeValue(value: any) {\r\n    return this.workType.filter(obj => obj.value == value)[0];\r\n  }\r\n  get calculateTotal() {\r\n\r\n\r\n    if (this.workSheetForm.duration.valid && this.workSheetForm.hourlyrate.valid) {\r\n      debugger;\r\n      var durration = this.workSheetForm.duration;\r\n      var rate = this.workSheetForm.hourlyrate.value.length == 0 ? this.rowData : parseFloat(this.workSheetForm.hourlyrate.value);\r\n      //if (durration != null) {\r\n      //  var minutes = durration.getMinutes();\r\n      //  if (minutes)\r\n      //    var rate = this.workSheetNewRow.hourlyrate.length == 0 ? this.defaultHourlyRate : parseFloat(this.workSheetNewRow.hourlyrate);\r\n      //}\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.WorkSheetEntryForm.invalid) {\r\n      return;\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<div class=\\\"col-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <input type=\\\"button\\\" value=\\\"Add New\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNewRow();\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <input type=\\\"button\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNewRow();\\\" />\\r\\n    </div>\\r\\n  </div> \\r\\n\\r\\n  <table>\\r\\n    <tr>\\r\\n      <th>Title</th>\\r\\n      <th>Type</th>\\r\\n      <th>Duration</th>\\r\\n      <th>Hourly Rate</th>\\r\\n      <th>Total</th>\\r\\n      <th></th>\\r\\n    </tr>\\r\\n\\r\\n      <tr worksheet-row *ngIf=\\\"isAddMode\\\" [rowData]=\\\"workSheetNewRow\\\"></tr>\\r\\n  \\r\\n  </table>\\r\\n\\r\\n  \\r\\n\\r\\n  <!--\\r\\n  <p>\\r\\n    Default Hourly Rate:${{defaultHourlyRate}}\\r\\n  </p>\\r\\n\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <p-table [value]=\\\"workSheetData\\\" editMode=\\\"row\\\">\\r\\n      <ng-template pTemplate=\\\"header\\\">\\r\\n        <tr>\\r\\n          <th>Title</th>\\r\\n          <th>Type</th>\\r\\n          <th>Duration</th>\\r\\n          <th>Hourly Rate</th>\\r\\n          <th>Total</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"isAddMode\\\">\\r\\n          <td>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"workSheetNewRow.title\\\">\\r\\n\\r\\n          </td>\\r\\n          <td>\\r\\n\\r\\n            <p-dropdown [options]=\\\"workType\\\" optionLabel=\\\"name\\\" [(ngModel)]=\\\"selectedWorkType\\\"></p-dropdown>\\r\\n\\r\\n          </td>\\r\\n          <td>\\r\\n            <p-calendar [(ngModel)]=\\\"workSheetNewRow.duration\\\" [timeOnly]=\\\"true\\\"></p-calendar>\\r\\n            \\\\\\r\\n          </td>\\r\\n          <td>\\r\\n\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"workSheetNewRow.hourlyrate\\\">\\r\\n          </td>\\r\\n          <td>{{calculateTotal}}</td>\\r\\n          <td style=\\\"text-align:center\\\">\\r\\n            <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Save\\\" (click)=\\\"saveTimeSheetEnty();\\\" />\\r\\n            &nbsp;\\r\\n            <input type=\\\"button\\\" class=\\\"btn btn-secondary\\\" value=\\\"Cancel\\\" (click)=\\\"isAddMode=false;\\\" />\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </ng-template>\\r\\n      <ng-template pTemplate=\\\"body\\\" let-rowData let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n        <tr [pEditableRow]=\\\"rowData\\\">\\r\\n\\r\\n          <td>\\r\\n            <p-cellEditor>\\r\\n              <ng-template pTemplate=\\\"input\\\">\\r\\n                <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.state\\\" required [ngStyle]=\\\"{'width':'100%'}\\\">\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"output\\\">\\r\\n                {{rowData.title}}\\r\\n              </ng-template>\\r\\n            </p-cellEditor>\\r\\n          </td>\\r\\n          <td>\\r\\n            <p-cellEditor>\\r\\n              <ng-template pTemplate=\\\"input\\\">\\r\\n                <p-dropdown [options]=\\\"workType\\\" optionLabel=\\\"name\\\" [(ngModel)]=\\\"selectedWorkType\\\" [style]=\\\"{'width':'100%'}\\\"></p-dropdown>\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"output\\\">\\r\\n                {{rowData.type}}\\r\\n              </ng-template>\\r\\n            </p-cellEditor>\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <p-cellEditor>\\r\\n              <ng-template pTemplate=\\\"input\\\">\\r\\n                <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.duration\\\" [ngStyle]=\\\"{'width':'100%'}\\\">\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"output\\\">\\r\\n                {{rowData.duration}}\\r\\n              </ng-template>\\r\\n            </p-cellEditor>\\r\\n          </td>\\r\\n          <td>\\r\\n            <p-cellEditor>\\r\\n              <ng-template pTemplate=\\\"input\\\">\\r\\n                <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.hourlyrate\\\" [ngStyle]=\\\"{'width':'100%'}\\\">\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"output\\\">\\r\\n                {{rowData.hourlyrate}}\\r\\n              </ng-template>\\r\\n            </p-cellEditor>\\r\\n          </td>\\r\\n          <td>\\r\\n            <p-cellEditor>\\r\\n              <ng-template pTemplate=\\\"input\\\">\\r\\n                <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.total\\\" [ngStyle]=\\\"{'width':'100%'}\\\">\\r\\n              </ng-template>\\r\\n              <ng-template pTemplate=\\\"output\\\">\\r\\n                {{rowData.total}}\\r\\n              </ng-template>\\r\\n            </p-cellEditor>\\r\\n          </td>\\r\\n\\r\\n          <td style=\\\"text-align:center\\\">\\r\\n            <button *ngIf=\\\"!editing\\\" type=\\\"button\\\" id=\\\"{{rowData.recordId}}\\\" pInitEditableRow class=\\\"btn btn-primary\\\" (click)=\\\"onRowEditInit(rowData)\\\">Edit</button>\\r\\n            <button *ngIf=\\\"editing\\\" type=\\\"button\\\" pSaveEditableRow class=\\\"btn btn-primary\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"> Save</button>\\r\\n            <button *ngIf=\\\"editing\\\" type=\\\"button\\\" pCancelEditableRow class=\\\"btn btn-primary\\\" (click)=\\\"onRowEditCancel(rowData, ri)\\\"> Cancel</button>\\r\\n            <button *ngIf=\\\"!editing\\\" type=\\\"button\\\" style=\\\"margin-right: .5em\\\" class=\\\"btn btn-danger\\\"> Delete</button>\\r\\n\\r\\n          </td>\\r\\n\\r\\n        </tr>\\r\\n\\r\\n\\r\\n      </ng-template>\\r\\n    </p-table>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  -->\\r\\n</div>\\r\\n\\r\\n\"","\r\nimport { Component, QueryList, ViewChildren, ElementRef, Renderer } from \"@angular/core\";\r\nimport { WorkSheetModel } from '../../../modules/worksheet-module/models/worksheet.model';\r\nimport { EditableRow } from \"primeng/table\";\r\n\r\ninterface WorkType {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'worksheet-grid',\r\n  templateUrl: './worksheet-grid.component.html',\r\n\r\n})\r\n\r\n\r\nexport class WorkSheetGrid {\r\n\r\n  workSheetData: WorkSheetModel[] = [];\r\n  workSheetNewRow: WorkSheetModel;\r\n  defaultHourlyRate: number = 250.50;\r\n  clonedRecord: { [s: number]: WorkSheetModel; } = {};\r\n  isAddMode: boolean = false;\r\n  workType: WorkType[];\r\n  selectedWorkType: WorkType\r\n\r\n  constructor(private renderer: Renderer, private elem: ElementRef) {\r\n\r\n\r\n    this.workType = [\r\n      { value: \"1\", name: \"Telephone Call\" },\r\n      { value: \"2\", name: \"Research \" },\r\n      { value: \"3\", name: \"Drafting Document \" }\r\n    ]\r\n  }\r\n\r\n\r\n\r\n  onRowEditInit(workSheetModel: WorkSheetModel) {\r\n    debugger;\r\n    this.clonedRecord[workSheetModel.recordId] = { ...workSheetModel };\r\n  }\r\n\r\n  addNewRow() {\r\n\r\n    this.isAddMode = true;\r\n    this.workSheetNewRow = { recordId: this.maxRecordId, state: 1, title: \"\", type: \"\", typeId: \"\", duration: \"\", defaultRate: this.defaultHourlyRate, hourlyrate: \"\", total: \"\" };\r\n\r\n  }\r\n  saveTimeSheetEnty() {\r\n\r\n    this.workSheetNewRow.typeId = this.selectedWorkType.value;\r\n    this.workSheetNewRow.type = this.selectedWorkType.name;\r\n    this.workSheetData.push(this.workSheetNewRow);\r\n    this.isAddMode = false;\r\n  }\r\n  get maxRecordId() {\r\n\r\n    return this.workSheetData.length + 1;;\r\n  }\r\n\r\n  //get calculateTotal() {\r\n\r\n  //  var durration = this.workSheetNewRow.duration;\r\n  //  if (durration != null) {\r\n  //    var minutes = durration.getMinutes();\r\n  //    if (minutes)\r\n  //    var rate = this.workSheetNewRow.hourlyrate.length == 0 ? this.defaultHourlyRate : parseFloat(this.workSheetNewRow.hourlyrate);\r\n  //  }\r\n  //  return 0;\r\n  //}\r\n\r\n\r\n}\r\n\r\n","//angular imports..\r\nimport { NgModule, ModuleWithProviders, ErrorHandler } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n//PrimNG\r\nimport { TableModule } from 'primeng/table';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport {CalendarModule} from 'primeng/calendar'; \r\n\r\n//App import \r\nimport { WorkSheetGrid } from './components/worksheet-grid.component';\r\n//App import \r\nimport { WorkSheetGridRow } from './components/worksheet-grid-row.component';\r\n \r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WorkSheetGrid,\r\n    WorkSheetGridRow\r\n  ],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    TableModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DropdownModule,\r\n    CalendarModule\r\n  ],\r\n\r\n  exports: [\r\n    WorkSheetGrid,\r\n    WorkSheetGridRow,\r\n    RouterModule,\r\n    CommonModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    TableModule,\r\n    ReactiveFormsModule,\r\n    DropdownModule,\r\n    CalendarModule\r\n  ]\r\n})\r\nexport class SharedModule {\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SharedModule\r\n\r\n    };\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n \\r\\n<worksheet-grid  ></worksheet-grid>\\r\\n\"","\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { WorkSheetModel } from '../models/worksheet.model';\r\n\r\n\r\n@Component({\r\n  selector: 'worksheet',\r\n  templateUrl: './worksheet.component.html',\r\n})\r\nexport class WorkSheet implements OnInit {\r\n\r\n\r\n\r\n  ngOnInit() {\r\n   }\r\n\r\n\r\n\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { WorkSheetModel } from '../models/worksheet.model';\r\n\r\n@Injectable()\r\nexport class WorkSheetDataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getWorkSheetData() {\r\n  \r\n  }\r\n\r\n   \r\n}\r\n","//angular imports..\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../shared-module/shared.module';\r\nimport { WorkSheet } from './components/worksheet.component'\r\nimport { WorkSheetDataService } from './services/worksheetdata.service';\r\n\r\n \r\n \r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WorkSheet\r\n  ],\r\n\r\n   imports: [\r\n    SharedModule,\r\n    RouterModule\r\n  ],\r\n  providers: [WorkSheetDataService]\r\n\r\n})\r\nexport class WorkSheetModule { }\r\n"," \r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WorkSheet } from './modules/worksheet-module/components/worksheet.component';\r\n \r\n\r\nconst APP_ROUTES: Routes = [\r\n  \r\n  {\r\n    path: '',\r\n    redirectTo: 'worksheet',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'worksheet',\r\n    component: WorkSheet\r\n  },\r\n   \r\n  { path: '**', redirectTo: '/404' }\r\n\r\n\r\n\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(APP_ROUTES, { useHash: true });\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}